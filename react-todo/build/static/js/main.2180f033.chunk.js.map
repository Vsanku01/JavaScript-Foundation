{"version":3,"sources":["components/Form.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["Form","setInputText","setTodos","todos","inputText","setStatus","type","className","onChange","e","target","value","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","TodoList","filteredTodos","index","App","useState","status","setFilteredTodos","useEffect","getLocalTodos","console","log","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","localTodos","parse","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2180f033.chunk.js","sourcesContent":["import React, { useState } from 'react';\n\nconst Form = ({ setInputText, setTodos, todos, inputText, setStatus }) => {\n  // Function to update the state in the App.js which will be further passed into the TodoList Component\n\n  const inputTextHandler = (e) => {\n    setInputText(e.target.value);\n  };\n\n  const submitTodoHandler = (e) => {\n    e.preventDefault();\n    setTodos([\n      ...todos,\n      { text: inputText, completed: false, id: Math.random(1000) },\n    ]);\n    setInputText('');\n  };\n\n  const statusHandler = (e) => {\n    setStatus(e.target.value);\n  };\n\n  return (\n    <form>\n      <input\n        type='text'\n        className='todo-input'\n        onChange={inputTextHandler}\n        value={inputText}\n      />\n      <button className='todo-button' type='submit' onClick={submitTodoHandler}>\n        <i className='fas fa-plus-square'></i>\n      </button>\n      <div className='select'>\n        <select name='todos' className='filter-todo' onChange={statusHandler}>\n          <option value='all'>All</option>\n          <option value='completed'>Completed</option>\n          <option value='uncompleted'>Uncompleted</option>\n        </select>\n      </div>\n    </form>\n  );\n};\n\nexport default Form;\n","import React from 'react';\n\nconst Todo = ({ todo, setTodos, todos }) => {\n  const deleteHandler = () => {\n    // Filter returns an array\n    setTodos(todos.filter((el) => el.id !== todo.id));\n  };\n\n  const completeHandler = () => {\n    setTodos(\n      // Mapping all the items and finding the correct item and changing thek completed status of the item\n      todos.map((item) => {\n        if (item.id === todo.id) {\n          return {\n            ...item,\n            completed: !item.completed,\n          };\n        }\n        return item;\n      })\n    );\n  };\n  return (\n    <div className='todo'>\n      {/* {} inside jsx is for writing JS Code */}\n      {/* If the completed flag of the todo is true, then add the \"completed\" class to the li tag*/}\n      <li className={`todo ${todo.completed ? 'completed' : ''}`}>\n        {todo.text}\n      </li>\n      <button className='complete-btn' onClick={completeHandler}>\n        <i className='fas fa-check'></i>\n      </button>\n      <button className='trash-btn' onClick={deleteHandler}>\n        <i className='fas fa-trash'></i>\n      </button>\n    </div>\n  );\n};\n\nexport default Todo;\n","import React from 'react';\nimport Todo from './Todo';\n\nconst TodoList = ({ todos, setTodos, filteredTodos }) => {\n  return (\n    <div className='todo-container'>\n      <ul className='todo-list'>\n        {filteredTodos.map((todo, index) => (\n          <Todo key={index} todo={todo} setTodos={setTodos} todos={todos} />\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default TodoList;\n","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n  useEffect(() => {\n    getLocalTodos();\n  }, []);\n\n  useEffect(() => {\n    console.log('Todo or status changed');\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  const filterHandler = () => {\n    switch (status) {\n      case 'completed':\n        setFilteredTodos(todos.filter((todo) => todo.completed === true));\n        break;\n      case 'uncompleted':\n        setFilteredTodos(todos.filter((todo) => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  };\n\n  // Save Local Todos\n  const saveLocalTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  };\n\n  // Get local Todos\n  const getLocalTodos = () => {\n    if (localStorage.getItem('todos') === null) {\n      localStorage.setItem('todos', JSON.stringify([]));\n    } else {\n      let localTodos = JSON.parse(\n        localStorage.getItem('todos', JSON.stringify(todos))\n      );\n      setTodos(localTodos);\n    }\n  };\n\n  return (\n    <div className='App'>\n      <header>\n        <h1>Vishnu's Todo List</h1>\n      </header>\n      <Form\n        todos={todos}\n        setTodos={setTodos}\n        setInputText={setInputText}\n        inputText={inputText}\n        setStatus={setStatus}\n      />\n      <TodoList\n        todos={todos}\n        setTodos={setTodos}\n        filteredTodos={filteredTodos}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}